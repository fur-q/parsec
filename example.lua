local parsec = require "parsec"

local p = parsec.new()

-- set the usage and description
p:set_descr("an awesome application which does many things")

-- override the default error function
-- fires when a required option is not specified, or on p:error()
-- names the missing option, shows the helptext and quits
p:set_error( function(self, str) print(str) end )

-- set the options
-- single-character flags are autogenerated
p.bool   = { "bool",   "a boolean" }                 -- -b
p.buul   = { "bool",   "another boolean" }           -- -u
p.string = { "string", "a string", required = true } -- -s
p.strong = { "string", "another string" }            -- -t
p.number = { "number", "a number", default = 5 }     -- -n
p.numero = { "number", "another number" }            -- -m
-- set the parameters
p.param  = { "param",  "a parameter" }
p.paran  = { "param",  "another parameter", count = 2 }

-- parse the options
p:parse()

-- print the helptext (e.g. for --help)
if p.bool then print(p:get_help()) end

-- given the input: app.lua -ubs hello -t "good bye" param1 param2 param3
print(p.bool, p.buul, p.string, p.strong, p.number, p.numero, p.param, p.paran)
-- true   true   hello   good bye   5   nil   param1   { param2, param3 }